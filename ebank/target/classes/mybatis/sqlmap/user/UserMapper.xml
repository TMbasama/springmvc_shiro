<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user">

    <!-- 根据id查询用户 -->
   <select id="queryById" parameterType="Long" resultType="User">
       SELECT * FROM user_info WHERE id=#{id} and status=1
    </select>
    <select id="queryByName" parameterType="String" resultType="User">
       SELECT * FROM user_info WHERE username=#{username} and status=1
    </select>
    
    <sql id="queryLst_condition">
	<where>
	 status=1
		<if test="pageWhere1 !=null and pageWhere1 !='' ">AND username LIKE CONCAT(CONCAT('%',#{pageWhere1}),'%')</if>      
		<if test="pageWhere2 !=null and pageWhere2 !='' ">AND shop LIKE CONCAT(CONCAT('%',#{pageWhere2}),'%')</if>      
		<if test="pageWhere3 !=null and pageWhere3 !='' ">AND phone LIKE CONCAT(CONCAT('%',#{pageWhere3}),'%')</if>      
		<if test="pageWhere4 !=null and pageWhere4 !='' ">AND createDate LIKE CONCAT(CONCAT('%',#{pageWhere4}),'%')</if>
	</where>
	</sql>
	<!-- 总数查询 -->
	<select id="queryCount" resultType="Integer" parameterType="Map">
		select
		count(*) as count
		from user_info
		<include refid="queryLst_condition"/>
	</select>
   <!-- 分页查询数据 -->
	<select id="queryLst" parameterType="Map" resultType="User">
		SELECT * FROM user_info
		 <include refid="queryLst_condition"/>
		<if test="sortName !=null and sortName !='' ">ORDER BY ${sortName} ${sortOrder}</if>
			limit #{offset},#{limit}
	</select>
	<!--查询用户id查询账号信息总数  -->
	<select id="queryAcctCount" resultType="Integer" parameterType="Map">
		select
		count(ai.acct_id) as count
		from user_info as ui
		left join rela_user_acct as rua
		on ui.id=rua.user_id
		left join acct_info as ai
		on rua.acct_id=ai.acct_id
		where ui.id=#{id}
	</select>
   <!-- 分页查询用户id查询账号信息数据 -->
	<select id="queryAcctLst" parameterType="Map" resultType="AccountInfo">
		select
		ai.acct_id,
		ai.acct_nickname,
		ai.acct_currency,
		ai.acct_balance,
		ai.online_bank,
		ai.mobile_bank,
		ai.acct_payment
		from user_info as ui
		left join rela_user_acct as rua
		on ui.id=rua.user_id
		left join acct_info as ai
		on rua.acct_id=ai.acct_id
		where ui.id=#{id}
		<if test="sortName !=null and sortName !='' ">ORDER BY ${sortName} ${sortOrder}</if>
			limit #{offset},#{limit}
	</select>
    <insert id="insert" parameterType="User" keyProperty="id"
		useGeneratedKeys="true">
		INSERT INTO
		user_info(
		username,
		password,
		salt,
		name,
		idcard,
		gender,
		phone,
		email,
		age,
		birthday,
		create_name,
		create_time,
		update_name,
		update_time
		)
		VALUES(#{username},#{password},#{salt},#{name},#{idcard},#{gender},#{phone},#{email},#{age},
		#{birthday},#{create_name},#{create_time},#{update_name},#{update_time})
	</insert>
	<insert id="addAccount" parameterType="UserAcct">
		INSERT INTO
		rela_user_acct(
		user_id,
		acct_id
		)
		VALUES(#{user_id},#{acct_id})
	</insert>
	 <update id="update" parameterType="User">
		UPDATE user_info
		<trim prefix="set" suffixOverrides=",">
			<if test="gender != null">gender = #{gender},</if>
			<if test="phone != null">phone = #{phone},</if>
			<if test="email != null">email = #{email},</if>
			<if test="age != null">age = #{age},</if>
			<if test="birthday != null">birthday = #{birthday},</if>
			<if test="updateName != null">updateName = #{updateName},</if>
			<if test="updateDate != null">updateDate = #{updateDate}</if>
		</trim>
		WHERE id = #{id} AND status=1
	</update>
    <update id="delete" parameterType="Long">
		UPDATE user_info SET
	    status=0 WHERE id = #{id} AND status=1	
	</update>
</mapper>